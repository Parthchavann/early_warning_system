version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: patient_ews
      POSTGRES_USER: ews_user
      POSTGRES_PASSWORD: secure_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ews_user -d patient_ews"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage

  # Redis for Caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # MLflow Tracking Server
  mlflow:
    image: python:3.11-slim
    ports:
      - "5000:5000"
    environment:
      MLFLOW_BACKEND_STORE_URI: postgresql://ews_user:secure_password@postgres:5432/patient_ews
      MLFLOW_DEFAULT_ARTIFACT_ROOT: /mlflow/artifacts
    volumes:
      - mlflow_artifacts:/mlflow/artifacts
    command: >
      sh -c "pip install mlflow psycopg2-binary &&
             mlflow server
             --backend-store-uri postgresql://ews_user:secure_password@postgres:5432/patient_ews
             --default-artifact-root /mlflow/artifacts
             --host 0.0.0.0
             --port 5000"
    depends_on:
      postgres:
        condition: service_healthy

  # Patient EWS API
  ews-api:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://ews_user:secure_password@postgres:5432/patient_ews
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - QDRANT_HOST=qdrant
      - REDIS_URL=redis://redis:6379
      - API_KEY=secure-api-key-change-in-production
    volumes:
      - models_data:/app/models
      - logs_data:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      qdrant:
        condition: service_started
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Streamlit Dashboard
  dashboard:
    build: 
      context: ../../
      dockerfile: deployment/docker/Dockerfile.dashboard
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://ews-api:8000
      - API_KEY=secure-api-key-change-in-production
    depends_on:
      ews-api:
        condition: service_healthy
    volumes:
      - dashboard_data:/app/dashboard

volumes:
  postgres_data:
  kafka_data:
  qdrant_data:
  redis_data:
  mlflow_artifacts:
  models_data:
  logs_data:
  dashboard_data:

networks:
  default:
    driver: bridge